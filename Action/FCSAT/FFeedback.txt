import { ZendeskService } from '@bahasa-ai/plugins-chatbot'
import { F7AfterFillCSAT } from '../../Bot/CSAT/F6Feedback/Main'
import { delay } from 'bluebird'
import { ZendeskUtils, Utils } from '@bahasa-ai/plugins-chatbot'


export const SaveFeedbackAnswer = async (event: EventMiddleware, data: DataMiddleware, next: StoryNextFunction) => {
  const stm = await data.STM.memory
  const ltm = await data.LTM.memory

  const lastTicketNumber = stm.ticketNumber
  const feedback = event.intent.parameter.userFeedback

  if (feedback && typeof feedback === 'string') {
    data.STM.patch({
      ticketFeedback: feedback
    })
  } else {
    throw new Error('[ERROR 1] Invalid feedback data type')
  }

  if (stm.ticketNumber) {
    await ZendeskService.getInstance().updateTicketCSAT(lastTicketNumber, ltm.zendeskRequesterId, stm.csatScore, feedback)
  }

  return next(event, data)
}

export const F7CloseFeedbackSession = async (event: EventMiddleware, data: DataMiddleware, next: StoryNextFunction) => {
  await new F7AfterFillCSAT().push(event)

  await delay(500)

  // WARN: FORCING SESSION EXPIRED
  await Utils.forceSessionExpired(event.sessionId)

  // Disable csat for user for 1 hour
  await ZendeskUtils.Cache.get.setExcludeCsat(event.sourceId)

  return next(event, data)
}