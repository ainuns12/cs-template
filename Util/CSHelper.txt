import { WorkingDay, WorkingHour } from './WorkingHour'

export const CACHE_TYPE_EX = 'EX'

export const AskUserToWaitHumanAgent = (isB2B: boolean = false) => {
  return [
    'Baik, mohon menunggu. Kami sedang menghubungkan kamu dengan tim Live Agent kami',
    '',
    'Ketik *batal* untuk membatalkan'
  ].join('\n')
}

export const ConnectedToAgentResponse = () => {
  return [
    'Terima kasih sudah menunggu. kamu telah terhubung dengan tim Live Agent kami 👩‍💻',
    '',
    '_Pesan kamu selanjutnya akan dibalas oleh tim kami ya_'
  ].join('\n')
}

export const OutsideWorkHourResponse = (userName: string) => {
  return [
    `Hi ${userName}, Terima kasih sudah menghubungi tim Live Agent kami. `,
    '',
    'Jam Operasional tim Live Agent kami:',
    `${WorkingDay()} Pk. ${WorkingHour()} WIB`,
    '',
    'Mohon ditunggu, terima kasih pengertiannya ☺️',
  ].join('\n')
}

export const TicketClosedResponse = () => {
  return [
    '_Tim kami telah mengakhiri percakapan_.',
    '',
    'Terima kasih telah menghubungi Live Agent kami'
  ].join('\n')
}

export const SatisfactionButtonId = {
  puas: 'puas',
  tidakPuas: 'tidak-puas'
}

export const SatisfactionButton = [
  {
    type: 'reply',
    reply: {
      id: SatisfactionButtonId.puas,
      title: 'Puas 👍'
    }
  },
  {
    type: 'reply',
    reply: {
      id: SatisfactionButtonId.tidakPuas,
      title: 'Tidak Puas 👎'
    }
  },
]

export const closingResponse = (additionalText: string[] = []) => {
  let interactiveText = ['Oh ya sebelum kamu pergi, kasih tahu Raya seberapa puas kamu dengan layanan Live Agent kami kali ini ya. Semoga harimu menyenangkan 😊']

  if (additionalText) {
    interactiveText = [...additionalText, ...interactiveText]
  }

  return {
    type: 'interactive',
    interactive: {
      type: 'button',
      body: {
        text: interactiveText.join('\n')
      },
      action: {
        buttons: SatisfactionButton
      }
    }
  }
}


/**function */

export function getUrlExtension(url: string): string {
  return url.split(/[#?]/)[0].split('.').pop().trim()
}

export function getUrlFileName(url: string): string {
  const filenames = url.split('/')
  return filenames[filenames.length - 1].trim()
}

/**cache */

export const CacheKeyUserZendeskTicket = (ticketID: number) => {
  return `{{ClientSlug}}:ZendeskTicket:${ticketID}`
}

export const CacheKeyUserDataByZendeskId = (ticketID: number) => {
  return `{{ClientSlug}}:UserDataByZendeskTicket:${ticketID}`
}

export const CacheKeyZendeskLastComment = (ticketID: number) => {
  return `{{ClientSlug}}:ZendeskLastComment:${ticketID}`
}

export const TicketCacheTTLInSeconds = () => {
  return (TicketAutoCloseInMinutes() + 5) * 60
}
export const CacheKeyKendalaPenggunaMenu = '{{ClientSlug}}:KendalaPenggunaMenu'

export const CacheKeyChatbotSessionZendeskComment = (sessionId: string) => {
  return `{{ClientSlug}}:ChatbotSessionZendeskComment;${sessionId}`
}

export const CacheKeyExcludeCsat = (sourceId: string) => {
  return `{{ClientSlug}}:ExcludeCsat:${sourceId}`
}

export const QueueName = {
  CreateTicket: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:createTicketQueue`,
  CommentTicket: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:commentTicketQueue`,
  CancelTicket: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:cancelTicketByUserQueue`,
  TicketAutoClose: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:ticketAutoCloseQueue`,
  UpdateTagSolvedByAgent: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:updateTagSolvedByAgent`,
  UpdateCsat: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:updateCsatQueue`,
  Enabler: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:queueEnabler`,
  ChatbotSessionCreateTicket: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:chatbotSessionCreateTicketQueue`,
  ChatbotSessionCommentTicket: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:chatbotSessionCommentTicketQueue`,
  ChatbotSessionCloseTicket: `{{ClientSlug}}:${process.env.ENVIRONMENT}:zendesk_bull:chatbotSessionCloseTicketQueue`
}


export const ClosedByBotTag = 'solved_by_bot'
export const ClosedByAgentTag = 'solved_by_agent'
export const MelebihiLimitPendingTag = 'melebihi_limit_pending'

export const TicketAutoCloseInMinutes = () => {
  return parseInt(process.env.TICKET_AUTOCLOSE) || 20
}

export const TicketReminderInMinutes = () => {
  return parseInt(process.env.TICKET_REMINDER) || 15
}

export const ChatbotAutoCloseInMinutes = () => {
  return parseInt(process.env.CHATBOT_AUTOCLOSE) || 20
}

export const ChatbotReminderInMinutes = () => {
  return parseInt(process.env.CHATBOT_REMINDER) || 15
}

export const CsatAutocloseInMinutes = () => {
  return parseInt(process.env.CSAT_AUTOCLOSE) || 60
}